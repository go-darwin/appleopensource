name: Test
on:
  push:
    branches:
    - '**'
    tags-ignore:
    - v*
  pull_request: {}

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        go-version:
          - 1.17.x
        os:
          - ubuntu-20.04
          - macos-11
          - windows-2022
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@master

      - name: Dump GitHub context
        uses: crazy-max/ghaction-dump-context@master

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Go modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.go-version }}-go-${{ hashFiles('**/go.sum') }}-${{ hashFiles('**/go.mod') }}
          restore-keys: ${{ runner.os }}-${{ matrix.go-version }}-go-${{ hashFiles('**/go.sum') }}-${{ hashFiles('**/go.mod') }}

      - name: Test
        run: go test -v -race -count=1 -shuffle=on ./...

      - name: Coverage
        run: go test -v -count=1 -shuffle=on -covermode=atomic -coverpkg=./... -coverprofile=coverage.out ./...

      - name: Send coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: coverage.out
          fail_ci_if_error: true

      - name: gorelease check
        run: go run golang.org/x/exp/cmd/gorelease@master

      - name: Check that git is clean post generate and tests
        run: test -z "$(git status --porcelain)" || (git status; git diff; false)
