version: 2.1

orbs:
  golang: cci-orb/golang@dev:0.0.5
  codecov: codecov/codecov@volatile

darwin: &darwin
  environment:
    GO111MODULE: "on"
  executor: golang/macos
  working_directory: ~/go/src/github.com/zchee/appleopensource

jobs:
  test:
    <<: *darwin
    steps:
      - run:
          name: Show versions
          command: |
            uname -a
            sw_vers
            xcodebuild -version
            system_profiler SPHardwareDataType
      - checkout
      - golang/homebrew
      - golang/gomod-download:
          path: "~/go/pkg/mod"
      - run:
          name: Test and collect coverages
          command: |
            make coverage/ci
      - codecov/upload:
          file: "/tmp/ci/artifacts/coverage.out"
      - store_artifacts:
          path: /tmp/ci/artifacts
      - store_artifacts:
          path: /tmp/ci/artifacts
      - store_test_results:
          path: /tmp/ci/test-results

  lint:
    <<: *darwin
    steps:
      - checkout
      - golang/homebrew
      - golang/gomod-download
      - run:
          name: Run lint for sources
          command: |
            make lint

  reviewdog:
    <<: *darwin
    steps:
      - checkout
      - golang/homebrew
      - golang/gomod-download
      - run:
          name: Run reviewdog
          command: |
            go get -u github.com/haya14busa/reviewdog/cmd/reviewdog
            reviewdog -reporter="github-pr-review"

workflows:
  version: 2
  workflows:
    jobs:
      - test:
          context: org-global
      - lint:
          context: org-global
      - reviewdog:
          context: org-global
          filters:
            branches:
              ignore: master
